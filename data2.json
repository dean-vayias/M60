[{
	"id": 1,
	"category": "Reading Music",
	"content": {
		"id": 0,
		"image": "ReadingMusic",
		"time": "9 minutes",
		"description": "Learn the basics of reading a piece of music.",
		"lessons": [{
				"id": 0,
				"title": "Staffs and Clefs",
				"video": "staffsandclefs.mp4",
				"duration": "1 minute",
				"explanation": "Gain an understanding of the staff (lines and spaces) and the role of treble and bass clefs in indicating pitch."
			},
			{
				"id": 1,
				"title": "Pitch and Intervals",
				"video": "pitchandintervals.mp4",
				"duration": "1 minute",
				"explanation": "Learn the musical alphabet, and where each note lies on the staff."
			},
			{
				"id": 2,
				"title": "Note Duration",
				"video": "noteduration.mp4",
				"duration": "1 minute",
				"explanation": "Learn about different note durations (whole notes, half notes, etc.), rests, and time signatures, which are essential for understanding rhythm in music."
			},
			{
				"id": 3,
				"title": "Steps and Skips",
				"video": "stepsandskips.mp4",
				"duration": "1 minute",
				"explanation": "Learn the concepts of steps and skips and intervals (e.g., seconds, thirds) in music, helping you grasp the foundations of musical pitch."
			},
			{
				"id": 4,
				"title": "Key Signatures, Majors and Minors",
				"video": "keysigsmajorsminors.mp4",
				"duration": "1 minute",
				"explanation": "Here, you'll explore major and minor keys, as well as how key signatures relate to scales, shaping the overall tonality and mood of a piece of music."
			},
			{
				"id": 5,
				"title": "Dynamics and Articulation",
				"video": "dynamicsandarticulation.mp4",
				"duration": "1 minute",
				"explanation": "This topic delves into dynamics (soft, loud, gradual changes) and articulation marks (staccato, legato) to understand how musicians add expressiveness and character to their performances."
			},
			{
				"id": 6,
				"title": "Tempo and Other Terminology",
				"video": "tempootherterm.mp4",
				"duration": "1 minute",
				"explanation": "Here, you'll learn common musical terms (e.g., tempo, BPM) and explore musical symbols and signs (e.g., repeat signs, fermata) to enhance your understanding of music theory and performance."
			},
			{
				"id": 7,
				"title": "Basic Rhythm Reading",
				"video": "basicrhythmreading.mp4",
				"duration": "1 minute",
				"explanation": "Use the knowledge you've gained thus far by actually reading a basic rhythm together!"
			},
			{
				"id": 8,
				"title": "Intermediate Rhythm Reading",
				"video": "intermediaterhythm.mp4",
				"duration": "1 minute",
				"explanation": "We'll read a rhythm that is a little more comprehensive together."
			}
		]
	},
	"test": {
		"id": 0,
		"image": "ReadingMusicTest",
		"time": "5 minutes",
		"description": "Test your knowledge of Reading Music.",
		"questions": [{
				"id": 0,
				"content": "Which of the following are the two types of clefs?",
				"correctIndex": 1,
				"answers": [
					"Symphonic and Bass",
					"Treble and Bass",
					"Symphonic and Treble",
					"Double and Treble"
				]
			},
			{
				"id": 1,
				"content": "Which of the following correctly lists the notes in the spaces of the treble clef?",
				"correctIndex": 0,
				"answers": [
					"FACE",
					"EGBDF",
					"ACEG",
					"GBDFA"
				]
			},
			{
				"id": 2,
				"content": "Where do you look to find the number of beats in a measure?",
				"correctIndex": 2,
				"answers": [
					"Top number of key signature",
					"Bottom number of key signature",
					"Top number of time signature",
					"Bottom number of time signature"
				]
			},
			{
				"id": 3,
				"content": "Fill in the blank: Flats ____ the pitch of a note by a half step",
				"correctIndex": 0,
				"answers": [
					"lower",
					"raise"
				]
			},
			{
				"id": 4,
				"content": "True or False: A half note gets 1 beat",
				"correctIndex": 1,
				"answers": [
					"True",
					"False"
				]
			},
			{
				"id": 5,
				"content": "A skip from C to A would be called which of the following?",
				"correctIndex": 2,
				"answers": [
					"Fourth",
					"Fifth",
					"Sixth",
					"Seventh"
				]
			},
			{
				"id": 6,
				"content": "Fill in the blank: A note with a dot above or below it should be played ____",
				"correctIndex": 2,
				"answers": [
					"legato, or smooth/connected",
					"loudly",
					"staccato, or short/detached",
					"softly"
				]
			},
			{
				"id": 7,
				"content": "What tool is used to hear the tempo of a piece of music?",
				"correctIndex": 0,
				"answers": [
					"Metronome",
					"Valve",
					"Slide",
					"Tuner"
				]
			},
			{
				"id": 8,
				"content": "How would you play a line of music with a forte dynamic marking in the first half, and then a piano dynamic in the second half?",
				"correctIndex": 3,
				"answers": [
					"Softly, then loudly",
					"Play the whole line loudly",
					"Play the whole line softly",
					"Loudly, then softly"
				]
			},
			{
				"id": 9,
				"content": "Which of the following should you do before playing a line of music?",
				"correctIndex": 3,
				"answers": [
					"Read the key signature",
					"Read the time signature",
					"Identify the tempo",
					"All of the above"
				]
			}
		]
	}
},
{
	"id": 2,
	"category": "Find your Fit!",
	"content": {
		"id": 0,
		"image": "FindyourFit",
		"time": "9 minutes",
		"description": "Find out which music group you belong in, and which instrument to play!",
		"lessons": [{
				"id": 0,
				"title": "Music Groups",
				"video": "musicgroups.mp4",
				"duration": "1 minute",
				"explanation": "<p>Declare your app by creating a structure that conforms to the App protocol and add one or more scenes to it. You can use built-in scenes, like WindowGroup, or you can compose custom scenes that conform to the Scene protocol. Scenes contain the view hierarchies that define the user interface of your app, and have a life cycle that the system manages.</p>"
			},
			{
				"id": 1,
				"title": "Introduction to Instruments",
				"video": "introtoinstruments.mp4",
				"duration": "1 minute",
				"explanation": "<p>Views and controls are the visual building blocks of your app's user interface. Use them to present your app's content onscreen. Views represent text, images, shapes, custom drawings, and compositions of any and all of these together. Controls enable user interaction with consistent APIs that adapt to their platform and context. Combine views using containers that specify their visual relationships and hierarchy. Use methods called modifiers to customize the display, behavior, and interactivity of built-in views and those you create for your app.</p>"
			},
			{
				"id": 2,
				"title": "Choosing an Instrument",
				"video": "choosinganinstrument.mp4",
				"duration": "1 minute",
				"explanation": "<p>Use stacks and lists to lay out the views of your user interface. You can combine static views with views that are dynamically generated from collections of data. All container views update and adjust the positions of their children in response to changes in content or interface dimensions.</p>"
			},
			{
				"id": 3,
				"title": "Choral Singing",
				"video": "choralsinging.mp4",
				"duration": "1 minute",
				"explanation": "<p>Use drawing tools to combine shapes or define custom paths for shapes of your own design. Apply styles from environment-aware colors to rich gradients to the foreground, background, and outline of your shapes.</p>"
			},
			{
				"id": 4,
				"title": "Finding your Chorale Voice",
				"video": "findingyourchoralevoice.mp4",
				"duration": "1 minute",
				"explanation": "<p>Integrate SwiftUI with your app's existing content using:</p><ul><li><p>Hosting controllers to add AppKit, UIKit, or WatchKit views and view controllers to your SwiftUI interfaces. A hosting controller wraps the designated view or view controller and facilitates communication between the wrapped object and your SwiftUI views.</p></li><li><p>Representable objects to add SwiftUI views into your existing AppKit, UIKit, or WatchKit interfaces. A representable object wraps a set of SwiftUI views in a form that you can then add to your storyboard-based app.</p></li></ul>"
			},
			{
				"id": 5,
				"title": "Intro to Percussion Instruments",
				"video": "introtopercussion.mp4",
				"duration": "1 minute",
				"explanation": "<p>SwiftUI offers a declarative approach to user interface design. As you compose a hierarchy of views, you also indicate data dependencies for the views. When the data changes, either due to an external event or because of an action taken by the user, SwiftUI automatically updates the affected parts of the interface. As a result, the framework automatically performs most of the work traditionally done by view controllers.</p><p>The framework provides tools, like state variables and bindings, for connecting your app's data to the user interface. These tools help you maintain a single source of truth for every piece of data in your app, in part by reducing the amount of glue logic you write.</p>"
			},
			{
				"id": 6,
				"title": "Ensemble vs Solo",
				"video": "ensemblevssolo.mp4",
				"duration": "1 minute",
				"explanation": "<p>SwiftUI implements many data management types, like State and Binding, as Swift property wrappers. Apply a property wrapper by adding an attribute with the wrapper's name to a property's declaration. The property gains the behavior specified by the wrapper. The state and data flow property wrappers in SwiftUI watch for changes in your data, and automatically update affected views as needed. When you refer directly to the property in your code, you access the wrapped value. Alternatively, you can access a property wrapper's projected value by prefixing the property name with the dollar sign ($). SwiftUI state and data flow property wrappers always project a Binding, which is a two-way connection to the wrapped value, allowing another view to access and mutate a single source of truth.</p>"
			},
			{
				"id": 7,
				"title": "Songwriting and Composition",
				"video": "songwritingandcomp.mp4",
				"duration": "1 minute",
				"explanation": "<p>Respond to taps and gestures by adding gesture modifiers to your views. Create custom gestures from individual gestures using the simultaneously(with:), sequenced(before:), or exclusively(before:) modifiers, or combine gestures with keyboard modifiers using the modifiers(_:) modifier.</p>"
			},
			{
				"id": 8,
				"title": "Music Production",
				"video": "musicproduction.mp4",
				"duration": "1 minute",
				"explanation": "<p>Generate dynamic, interactive previews of your custom views. Xcode statically discovers types that conform to the PreviewProvider protocol in your app, and generates previews for each provider it discovers.</p>"
			}
		]
	},
	"test": {
		"id": 0,
		"image": "FindyourFitTest",
		"time": "5 minutes",
		"description": "Test how well you understand different music groups and instruments.",
		"questions": [{
				"id": 0,
				"content": "Orchestras primarily feature string instruments, with smaller amounts of brass, woodwinds, and percussion included.",
				"correctIndex": 0,
				"answers": [
					"true",
					"false"
				]
			},
			{
				"id": 1,
				"content": "Which instrument family is usually responsible for maintaining the rhythm of the ensemble?",
				"correctIndex": 1,
				"answers": [
					"Woodwinds",
					"Percussion",
					"Strings",
					"Brass"
				]
			},
			{
				"id": 2,
				"content": "Which of the following are factors you should consider when deciding on an instrument to play?",
				"correctIndex": 3,
				"answers": [
					"Size",
					"Physicality",
					"Preference",
					"All of the above"
				]
			},
			{
				"id": 3,
				"content": "You need access to an instrument to play in a choir",
				"correctIndex": 1,
				"answers": [
					"true",
					"false"
				]
			},
			{
				"id": 4,
				"content": "Which of the following lists the 4 voice parts in order from highest to lowest in pitch?",
				"correctIndex": 0,
				"answers": [
					"Alto, Soprano, Tenor, Bass",
					"Soprano, Alto, Tenor, Bass",
					"Tenor, Bass, Alto, Soprano",
					"Bass, Tenor, Soprano, Alto"
				]
			},
			{
				"id": 5,
				"content": "Which of the following instruments work exceptionally well as solo instruments, due to their ability to cover both melody (primary part) and harmony (all other parts)?",
				"correctIndex": 2,
				"answers": [
					"Guitar",
					"Piano",
					"Both 1 and 2",
					"None of the above"
				]
			},
			{
				"id": 6,
				"content": "Which of the following apps is included on all Apple devices, and can help you start your journey into engineering sounds that might be found in genres such as EDM and many more?",
				"correctIndex": 0,
				"answers": [
					"Garageband",
					"Canvas",
					"Google Classroom",
					"Zoom"
				]
			}
		]
	}
}]
